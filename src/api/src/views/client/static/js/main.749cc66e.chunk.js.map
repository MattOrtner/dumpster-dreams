{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["INVENTORY","name","price","CheckOut","props","console","log","someOtherThing","className","onClick","toMainPage","cart","map","item","reduce","total","MainPage","toCheckout","inventory","index","addToCart","App","useState","isCheckout","setCheckout","useEffect","a","request","get","result","body","filter","inCart","event","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iSAIMA,EAAY,CAChB,CACEC,KAAM,UACNC,MAAO,OAET,CACED,KAAM,eACNC,MAAO,KAET,CACED,KAAM,QACNC,MAAO,QAILC,EAAW,SAACC,GAKhB,OADAC,QAAQC,IAAIF,EAAMG,gBAEhB,sBAAKC,UAAU,WAAf,UACE,oBAAIA,UAAU,iBAAd,sBACA,wBAAQC,QAASL,EAAMM,WAAvB,kBACCN,EAAMO,KAAKC,KAAI,SAACC,GACf,OAAO,qBAAKL,UAAU,OAAf,SAAuBK,EAAKZ,UAErC,gDACA,0CAXKG,EAAMO,KAAKG,QAAO,SAACC,EAAOF,GAAR,OAAkBE,EAAQF,EAAKX,QAAQ,MAY9D,gDAIAc,EAAW,SAACZ,GAChB,OACE,gCACE,wBAAQK,QAASL,EAAMa,WAAvB,yBACCb,EAAMc,UAAUN,KAAI,SAACC,EAAMM,GAAP,OACnB,sBAAKX,UAAU,YAAYC,QAASL,EAAMgB,UAAUD,GAApD,UACE,4BAAIN,EAAKZ,OACT,4BAAIY,EAAKX,UAFX,UAAoEiB,EAApE,sBA+COE,MAvCf,WAAgB,IAAD,EACOC,mBAAStB,GAAtBkB,EADM,sBAEqBI,oBAAS,GAF9B,mBAENC,EAFM,KAEMC,EAFN,KAsBb,OAlBAC,qBAAU,WACR,sBAAC,4BAAAC,EAAA,sEACsBC,IAAQC,IAAI,UADlC,OACOC,EADP,OAGCxB,QAAQC,IAAIuB,EAAOC,MAHpB,0CAAD,MAkBA,qBAAKtB,UAAU,MAAf,SACGe,EACG,cAAC,EAAD,CACAZ,KAAMO,EAAUa,QAAO,SAAAlB,GAAI,OAAIA,EAAKmB,UACpCtB,WAAY,kBAAMc,GAAY,MAC9B,cAAC,EAAD,CACAN,UAAWA,EACXD,WAAY,kBAAMO,GAAY,IAC9BJ,UAlBU,SAACD,GAAD,OAAW,SAAAc,WCnDhBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.749cc66e.chunk.js","sourcesContent":["import { useState, useEffect } from 'react'\nimport request from 'superagent'\nimport './App.css'\n\nconst INVENTORY = [\n  {\n    name: 'dresser',\n    price: 30.85,\n  },\n  {\n    name: 'sweet-mirror',\n    price: 345,\n  },\n  {\n    name: 'table',\n    price: 41.23,\n  },\n]\n\nconst CheckOut = (props) => {\n  const getTotal = () => {\n    return props.cart.reduce((total, item) => (total + item.price), 0)\n  }\n  console.log(props.someOtherThing)\n  return (\n    <div className='checkout'>\n      <h2 className='checkout-title'>CHECKOUT</h2>\n      <button onClick={props.toMainPage}>back</button>\n      {props.cart.map((item) => {\n        return <div className='item'>{item.name}</div>\n      })}\n      <p>cost of items: </p>\n      <p>TOTAL: $ {getTotal()}</p>\n      <button>PayPal</button>\n    </div>\n  )\n}\nconst MainPage = (props) => {\n  return (\n    <div>\n      <button onClick={props.toCheckout}>To Checkout</button>\n      {props.inventory.map((item, index) =>\n        <div className='item-card' onClick={props.addToCart(index)} key={`${index}-item-card`}>\n          <p>{item.name}</p>\n          <p>{item.price}</p>\n        </div>\n      )}\n    </div>\n  )\n}\nfunction App() {\n  const [inventory] = useState(INVENTORY)\n  const [isCheckout, setCheckout] = useState(false)\n\n  useEffect(() => {\n    (async () => {\n      const result = await request.get('/users')\n\n      console.log(result.body)\n\n    })();\n  });\n\n  const addToCart = (index) => event => {\n    // const updatedItem = { ...inventory[index], inCart: true }\n    // setInventory([\n    //   ...inventory.slice(0, index),\n    //   updatedItem,\n    //   ...inventory.slice(index + 1)\n    // ])\n  }\n\n  return (\n    <div className='App'>\n      {isCheckout\n        ? <CheckOut\n          cart={inventory.filter(item => item.inCart)}\n          toMainPage={() => setCheckout(false)} />\n        : <MainPage\n          inventory={inventory}\n          toCheckout={() => setCheckout(true)}\n          addToCart={addToCart}\n        />\n      }\n    </div>\n  )\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}